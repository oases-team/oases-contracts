{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8Eb21E4d1cf8562a4a088B9A608aABA3c00AC441",
    "txHash": "0xbe65ce4c308729a9c15450a16b8a8c625df08d184f6fbc3b26d686b56fa8b449"
  },
  "proxies": [
    {
      "address": "0x7da546D1c9504A8e509E1477F39A6b77178674F1",
      "txHash": "0xc04581652fbbc22cb4a7797446a5ab94110fd29c7fa17caa6c14b758e15a08e4",
      "kind": "transparent"
    },
    {
      "address": "0x09884B0e69DDF129E1258bF00697E4Ac08487242",
      "txHash": "0xbf18c3595c7d4c283cecc97a091a30e97827ee4de0ea8dfe4622acea749ec10a",
      "kind": "transparent"
    },
    {
      "address": "0x1b9bF58D2D2Ec16B3D5b463952386ea163827b64",
      "txHash": "0xd149547cc1fb5adc3a3e23218add7236484ea1958ef5fb7fe4b74d7ebc48cdcc",
      "kind": "transparent"
    },
    {
      "address": "0x0bc206e67d9bc0876fB1fD549a7478B826aBaF2B",
      "txHash": "0xcc2331f43dfa3ccc13bb56ec76410f26cf0791d7c3a646f148fed9413585a305",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e741bd927472d68e1792297bb803d02579ac51d506427cf8d360d3ab817bcdac": {
      "address": "0xC13516615d9f49E92bF9Cfc2cD5ED7aaA0523309",
      "txHash": "0x8e39066e38f294dee79adc649ee59ab600c582710091786746ad71dae306f516",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_defaultProtocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:12"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_memberCardProtocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:13"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_memberCardNFTAddress",
            "type": "t_address",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:14"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dff79aa56a8d0e1023e99e2b51237ec01c65ab503565bae6068743ca39e1b2ca": {
      "address": "0x7EB193991979dC118D697d5bFd1D3eC1b52eDd4C",
      "txHash": "0xe3817c29b6bb6d4b35b2857d5bfdd64f4af53ca67ebff409d783aec1a5266a77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:41"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:221"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:24"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeProvider",
            "type": "t_contract(IProtocolFeeProvider)6690",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:25"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:423"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IProtocolFeeProvider)6690": {
            "label": "contract IProtocolFeeProvider"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c96a4b17ad6ace544227163897443a53bf1c9c867a984f47dd2662700cd5bc27": {
      "address": "0xB245D20ae597fBFC7adCEabba915A4ac90474aa4",
      "txHash": "0x2e3cabe4472faa4be3f7603c0dce77667a07b9d9f9e05c0075b4cc272617cb6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2946_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2243_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:98"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)39_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:593"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:29"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721BurnableUpgradeable.sol:50"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc1271/ERC1271Validator.sol:43"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/Mint721Validator.sol:24"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltyInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3232_storage)dyn_storage)",
            "src": "../project:/contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creatorInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3232_storage)dyn_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:28"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:166"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:8"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:27"
          },
          {
            "contract": "ERC721OasesBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721OasesBase.sol:35"
          },
          {
            "contract": "ERC721Oases",
            "label": "prices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:12"
          },
          {
            "contract": "ERC721Oases",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:15"
          },
          {
            "contract": "ERC721Oases",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:218"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3232_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PartLibrary.Part[])"
          },
          "t_array(t_struct(Part)3232_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3232_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2946_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2946_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2488_storage"
              }
            ]
          },
          "t_struct(Set)2488_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2243_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2013_storage"
              }
            ]
          },
          "t_struct(Map)2013_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2682_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2682_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2488_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]"
          }
        }
      }
    },
    "1bc589042af3a85f28bade82ba09b59cd217442e46c0a81593f331425f37bd25": {
      "address": "0xe29D94beB831aAe26B9E2EAd18f43815Aae9bd77",
      "txHash": "0x4559cd53141ba66943f15f5389b3c455ed85a42c67db6d83c7b961df5b545ea3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltyInfosByToken",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfosSet)7219_storage)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:26"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesProviders",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:28"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:211"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(RoyaltyInfosSet)7219_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltyInfosSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(RoyaltyInfosSet)7219_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltyInfosSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)3232_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Part)3232_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3232_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "07b8e2b25679530306477f8feca149779f574d46696bd1562fb1dd3a34415fac": {
      "address": "0x00700E6BD9D03F1e06733C8620d956783c100152",
      "txHash": "0x1c277fe0842ae20efc8f7ce14ac68a86db60a56d6c3eb1d3818147cb13e05fac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltyInfosByToken",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfosSet)7216_storage)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:26"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesProviders",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:28"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:211"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(RoyaltyInfosSet)7216_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltyInfosSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(RoyaltyInfosSet)7216_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltyInfosSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)3232_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Part)3232_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3232_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
