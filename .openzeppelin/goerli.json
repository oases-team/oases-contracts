{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xfd5657782adAD34D88Bad03fF314309aEC3f96D2",
    "txHash": "0x85244e530a2531a2444acc4bc205d5e27c64accc6ab8a4fa0d56061b8f424caf"
  },
  "proxies": [
    {
      "address": "0x43316823ab99579068A8B5f0273839efB235e451",
      "txHash": "0xf6e61b67511a285ece217cdc748a244c0f28ff98e1c3a63cef5f1c19f4452b22",
      "kind": "transparent"
    },
    {
      "address": "0xB7AA93AdBb28fc566CA0165fDBb12E8cF6EEE2d2",
      "txHash": "0x70f50c7f5d0d4a4f9504cd38ba53c5147cdee47bc2e11dec6b678929fe63fe6c",
      "kind": "transparent"
    },
    {
      "address": "0x4D8d564016A7d9F7E307d3cee7eDF6239D81B78c",
      "txHash": "0x4a45d8536daa807fa2b21b8e2df2402015a3a95259bd9114c9d3f43dfb5bdb5a",
      "kind": "transparent"
    },
    {
      "address": "0xf6Ca50dd2555c8BC2C6540f81901fC68221B86FE",
      "txHash": "0x281a9dc745af626bbeac5a0f7d7ffd02ce3941dad34032d08ac87a91b22b2edf",
      "kind": "transparent"
    },
    {
      "address": "0x3C946e209AEacB45394b46a600DbFd63BbC3AC75",
      "txHash": "0x628146b1ecb90cc50f4aae1d7382dc38673d9ec624ca93fba08926f6e2848080",
      "kind": "transparent"
    },
    {
      "address": "0xBCB4c39D56368Bbf51cBb0Af252404E63c3eC356",
      "txHash": "0x1cdb8cd084a0b1dbefa29e743cc86dda44bfbc6fa1763c88b02e5f35cc1ae08e",
      "kind": "transparent"
    },
    {
      "address": "0x923739AC6711248b3924B9EC0521d259D5Dd88de",
      "txHash": "0x7b77fe64a332cbb826ef7eafa02c18c05fc82a58baf6bc63a07b6ee1ffc38191",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bd68b27661e93fd806f7d0a8fd4a41dc77cf1f0db0d2fb471885a781dac26f63": {
      "address": "0x1AA7915859f8048EFFBa250F1968a7373827332d",
      "txHash": "0x38aa786f665371ffa5e4c995aea71771526182a1a3887fdcab69e01c7f059773",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:59"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:217"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:20"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:21"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:22"
          },
          {
            "contract": "OasesCashierManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)6678",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:425"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRoyaltiesProvider)6678": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3ba99cedb210931d728a586de42dee82acb2f62d4a8c4917cdddbf7a22d825ca": {
      "address": "0xd26f980fAF0f6c57a88a703d9C03a19d8A1F5f7e",
      "txHash": "0xb39c3f412a3e21029fba001b265211dddf07206e528f5086871bd24b5193c7c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2867_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2164_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:98"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:593"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:29"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721BurnableUpgradeable.sol:50"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc1271/ERC1271Validator.sol:44"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/Mint721Validator.sol:26"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltyInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creatorInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:28"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:164"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:8"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:27"
          },
          {
            "contract": "ERC721OasesBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721OasesBase.sol:35"
          },
          {
            "contract": "ERC721Oases",
            "label": "prices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:13"
          },
          {
            "contract": "ERC721Oases",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:16"
          },
          {
            "contract": "ERC721Oases",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:209"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PartLibrary.Part[])"
          },
          "t_array(t_struct(Part)3153_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3153_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2867_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2867_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_struct(Set)2409_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2164_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1934_storage"
              }
            ]
          },
          "t_struct(Map)1934_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2603_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2603_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          }
        }
      }
    },
    "a66ce0762a0ac11c3a8fcdf44af2f3e18e357bc645721942f13d68cfdef46640": {
      "address": "0xD4929a69b714Eb911f1a29B9B2BF679838734EBC",
      "txHash": "0x4710fd96f23feeb99672d83ccc7268f5fb6074cd048b9621d0e8bd74860efb8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2867_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2164_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:98"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:593"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:29"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721BurnableUpgradeable.sol:50"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc1271/ERC1271Validator.sol:44"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/Mint721Validator.sol:26"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltyInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creatorInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:28"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:164"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:8"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:27"
          },
          {
            "contract": "ERC721OasesBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721OasesBase.sol:35"
          },
          {
            "contract": "ERC721Oases",
            "label": "prices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:13"
          },
          {
            "contract": "ERC721Oases",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:16"
          },
          {
            "contract": "ERC721Oases",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:212"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PartLibrary.Part[])"
          },
          "t_array(t_struct(Part)3153_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3153_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2867_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2867_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_struct(Set)2409_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2164_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1934_storage"
              }
            ]
          },
          "t_struct(Map)1934_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2603_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2603_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          }
        }
      }
    },
    "a52a045985673f90425140c0ddbae61aaca74952288bcc10643c261755484fe4": {
      "address": "0x8862B4Df3f1D9967A6D093ac7b8b5157E8d88EC4",
      "txHash": "0xb619a9919d0266e048210e1ff276d4c2d150c69537c233841bf06201e4ab9993",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:59"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:217"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:20"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:21"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:22"
          },
          {
            "contract": "OasesCashierManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)6787",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:425"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRoyaltiesProvider)6787": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "039e29b8e6e230348f64e366264d838accb029fd4b057a2b38795f1b5f8e1efc": {
      "address": "0x4F12dbA9A5C88A87c74204576FAce6493aF86679",
      "txHash": "0x25bc45ca2517deaf85cab2ba126c57e9d7ff33a5fbde663bf34e0179ed6c6339",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2867_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2164_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:98"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:593"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:29"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721BurnableUpgradeable.sol:50"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc1271/ERC1271Validator.sol:44"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/Mint721Validator.sol:26"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltyInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creatorInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:28"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:166"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:8"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:27"
          },
          {
            "contract": "ERC721OasesBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721OasesBase.sol:35"
          },
          {
            "contract": "ERC721Oases",
            "label": "prices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:13"
          },
          {
            "contract": "ERC721Oases",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:16"
          },
          {
            "contract": "ERC721Oases",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:212"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PartLibrary.Part[])"
          },
          "t_array(t_struct(Part)3153_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3153_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2867_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2867_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_struct(Set)2409_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2164_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1934_storage"
              }
            ]
          },
          "t_struct(Map)1934_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2603_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2603_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          }
        }
      }
    },
    "ba40a711a35cfb6a1c9e31e5f20a925bad33ff83002d1093616108b7e965e0cc": {
      "address": "0xF2E2382F00f135e99Be050A12a92e79D8e1E1324",
      "txHash": "0x78c85af79d7bc877445fe9b34b02d98f480aba8752ba17efce37b79f5f2f7af7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:59"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:217"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:20"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:21"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:22"
          },
          {
            "contract": "OasesCashierManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)6787",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:425"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRoyaltiesProvider)6787": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "653109aa8cca32a928c21b4cf321fdb7c66a3f82c6adb50f3ade13bcef3dab07": {
      "address": "0xa9daD863BA5A494f71807b99Fd6080192dbB227f",
      "txHash": "0xe33217f17d8388d91282e92d18952876b6fb98088cec7fde065dc0803e3fa03e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:59"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:219"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:20"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:21"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:22"
          },
          {
            "contract": "OasesCashierManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)6813",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:425"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRoyaltiesProvider)6813": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e03d072155d0b37ca84e1e4e11b78cb32f61ca7600a343794b95050c14204e3f": {
      "address": "0xE234Da1CC0D335981804605562dE542c5719321f",
      "txHash": "0x9c5baa43ef555fd61377125266ac114dacedd09a0ed46b22474b4cffbd223e68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:59"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:219"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:20"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:21"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:22"
          },
          {
            "contract": "OasesCashierManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)6804",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:425"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRoyaltiesProvider)6804": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "07b8e2b25679530306477f8feca149779f574d46696bd1562fb1dd3a34415fac": {
      "address": "0x582fBf11488c5f99900C4b818BB92E48320F6AD2",
      "txHash": "0xe8f3ed7e03f7e6013638eab7f11593cdb5c438b7fc3ff760c4049350b597fe75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltyInfosByToken",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfosSet)7204_storage)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:26"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesProviders",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:28"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:211"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(RoyaltyInfosSet)7204_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltyInfosSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(RoyaltyInfosSet)7204_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltyInfosSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)3232_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Part)3232_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3232_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e741bd927472d68e1792297bb803d02579ac51d506427cf8d360d3ab817bcdac": {
      "address": "0x346f8ade3C4EC89bb91a2ec3C814d5a64573D999",
      "txHash": "0x3a1eed87163f377e7af5a02ee30a603cdc47341df25cdec95927bbaa83ca0fdc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_defaultProtocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:12"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_memberCardProtocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:13"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_memberCardNFTAddress",
            "type": "t_address",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:14"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dff79aa56a8d0e1023e99e2b51237ec01c65ab503565bae6068743ca39e1b2ca": {
      "address": "0xae74BE098E071d9C2472d90E9c0F1D787CdC0910",
      "txHash": "0xc047c9b38465e9073bd6bfb36b1b0c348b6834fff7366c866a99b37001ca8bdb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:41"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:221"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:24"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeProvider",
            "type": "t_contract(IProtocolFeeProvider)6690",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:25"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:423"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IProtocolFeeProvider)6690": {
            "label": "contract IProtocolFeeProvider"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c96a4b17ad6ace544227163897443a53bf1c9c867a984f47dd2662700cd5bc27": {
      "address": "0x5C2Cd7a44BDA978F25e0B1c87e2a555FC460aeEd",
      "txHash": "0x73ecb2c8e7b257cbd82bdb1499fb824e0c7687b1ffe45940b065142a15efae96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2946_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2243_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:98"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)39_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:593"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:29"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721BurnableUpgradeable.sol:50"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc1271/ERC1271Validator.sol:43"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/Mint721Validator.sol:24"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltyInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3232_storage)dyn_storage)",
            "src": "../project:/contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creatorInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3232_storage)dyn_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:28"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:166"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:8"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:27"
          },
          {
            "contract": "ERC721OasesBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721OasesBase.sol:35"
          },
          {
            "contract": "ERC721Oases",
            "label": "prices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:12"
          },
          {
            "contract": "ERC721Oases",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:15"
          },
          {
            "contract": "ERC721Oases",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:218"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3232_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PartLibrary.Part[])"
          },
          "t_array(t_struct(Part)3232_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3232_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2946_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2946_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2488_storage"
              }
            ]
          },
          "t_struct(Set)2488_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2243_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2013_storage"
              }
            ]
          },
          "t_struct(Map)2013_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2682_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2682_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2488_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]"
          }
        }
      }
    }
  }
}
