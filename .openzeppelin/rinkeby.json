{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x749544e4CeD0ae46f0DeA9e160058BF287cC0ea8",
    "txHash": "0x68f179d3e864443412852d65c7be3b9111dc48e8c197162c17dff4d861b928ac"
  },
  "proxies": [
    {
      "address": "0xAC7c0E649294E758cd1853421C4b2FB5210cCA9f",
      "txHash": "0xe3e72c03544de641d6f3ea37cdcebd15eaf941072f757d9379a782e262d5f4b1",
      "kind": "transparent"
    },
    {
      "address": "0x38136D95Afa784F874a1fc343cd4872f6AbCA855",
      "txHash": "0x083da9d54173ff17869b4c7b7b562cb1fcb8c506f13d0310791a0925146c1dd4",
      "kind": "transparent"
    },
    {
      "address": "0x642b96f2FD07C025c4C736571eA092412ce1f727",
      "txHash": "0x72a9f9f143dc80e674622ee8bc8c40f03daafa5b207ba55a687aef7c3b25e357",
      "kind": "transparent"
    },
    {
      "address": "0x7a347A6beD159005429267CF9d37bc236Ed99b44",
      "txHash": "0xd25fe1563975af5341730d6596e0b96908329c85e5455bd2b8d5406b667dfd47",
      "kind": "transparent"
    },
    {
      "address": "0x33AFEDBd8A09E0c97A124e02E0b91Fa38229EF30",
      "txHash": "0xcc201b61a929edfe90b85d559e169f35bfcb1b4cdb2442187750b97c3bee93fa",
      "kind": "transparent"
    },
    {
      "address": "0xA55fEdd29e620703a6A7c57D17d732ab537F37E9",
      "txHash": "0x20b306abd9c22d92a8f4d6bb645ced2fcbbd9e89bffcb0eca74dca5d96ee885f",
      "kind": "transparent"
    },
    {
      "address": "0xcA6A25CE66b5bdc3Da6d6f550976D4404Ea1aff8",
      "txHash": "0xbf2d662336b78a2e570af7f085f53829d9fd5fc7f900a2eacfca7be540bcb874",
      "kind": "transparent"
    }
  ],
  "impls": {
    "825fdd6e49e0ae4ff2f9dfe90dee32d545c93fb3918089acc6a3fd6eaeaf35ca": {
      "address": "0x81C382e3B099fd1cfA49d92ae481AbC13F856f6C",
      "txHash": "0x5de022f7af91850805307dc3854bc30432060e5b9b2e1a439e543747f35fe7de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_defaultProtocolFeeBasisPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:12"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_memberCardProtocolFeeBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:13"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "_memberCardNFTAddress",
            "type": "t_address",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:14"
          },
          {
            "contract": "ProtocolFeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/protocol_fee_provider/ProtocolFeeProvider.sol:66"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3821bb1184a511efecd30d41609fd63b1b6cc583d2bef00832c607da62e15580": {
      "address": "0x53783106B22Af5C92A582c4F291Df8fD4a00b957",
      "txHash": "0xdaef32472d736375c3979fe17a961af8dbd319320c3df00fd6bc43ae272ad6d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "assetTypeMatchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:14"
          },
          {
            "contract": "AssetTypeMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/AssetTypeMatcher.sol:110"
          },
          {
            "contract": "Cashier",
            "label": "transferProxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:18"
          },
          {
            "contract": "Cashier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/Cashier.sol:87"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "OrderVerifier",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OrderVerifier.sol:59"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "filledRecords",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:20"
          },
          {
            "contract": "OasesMatchingCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesMatchingCore.sol:219"
          },
          {
            "contract": "OasesCashierManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:23"
          },
          {
            "contract": "OasesCashierManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:24"
          },
          {
            "contract": "OasesCashierManager",
            "label": "protocolFeeProvider",
            "type": "t_contract(IProtocolFeeProvider)6636",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:25"
          },
          {
            "contract": "OasesCashierManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/oases_exchange/OasesCashierManager.sol:423"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IProtocolFeeProvider)6636": {
            "label": "contract IProtocolFeeProvider"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "52a5c5303c507da609cb7e5ccf70686ff0f921443920c0769a06339dc74f5743": {
      "address": "0xd14542664efC0A930cd384340F32eaEA5727b3D2",
      "txHash": "0x3226364f287329a39346c4ab0db959f1dddca187b46558f42d8bf237a587ffc7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2867_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2164_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:98"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Upgradeable.sol:593"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721DefaultApproval.sol:29"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721BurnableUpgradeable.sol:50"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc1271/ERC1271Validator.sol:43"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/Mint721Validator.sol:24"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltyInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creatorInfos",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:28"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Lazy.sol:166"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:8"
          },
          {
            "contract": "ContractURIUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/ContractURIUpgradeable.sol:27"
          },
          {
            "contract": "ERC721OasesBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721OasesBase.sol:35"
          },
          {
            "contract": "ERC721Oases",
            "label": "prices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:12"
          },
          {
            "contract": "ERC721Oases",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:15"
          },
          {
            "contract": "ERC721Oases",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/tokens/erc721/ERC721Oases.sol:218"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3153_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PartLibrary.Part[])"
          },
          "t_array(t_struct(Part)3153_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3153_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)2867_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2867_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_struct(Set)2409_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2164_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1934_storage"
              }
            ]
          },
          "t_struct(Map)1934_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2603_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2603_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2409_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1bc589042af3a85f28bade82ba09b59cd217442e46c0a81593f331425f37bd25": {
      "address": "0xD1abF80Ecd28D00f957B5Aae3f6840b78e9A8868",
      "txHash": "0xdec5c1af0426809a1c6207a5d545baefe8b0f498ef0aae23ad689a3a3abc9437",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:26"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/common_libraries/ERC721OasesEvents.sol:33"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltyInfosByToken",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfosSet)7165_storage)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:26"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesProviders",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:28"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:211"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(RoyaltyInfosSet)7165_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltyInfosSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(RoyaltyInfosSet)7165_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltyInfosSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)3153_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Part)3153_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3153_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "07b8e2b25679530306477f8feca149779f574d46696bd1562fb1dd3a34415fac": {
      "address": "0x1c1f3Aa80D1cdada0EcE4CACB0101A47eeC4213d",
      "txHash": "0x3e98455022470a5cc5b4f2496d3db2967a22d632dc97f583a61a1feb40ad004d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltyInfosByToken",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfosSet)7204_storage)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:26"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesProviders",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:28"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../project:/contracts/royalties/registry/RoyaltiesRegistry.sol:211"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(RoyaltyInfosSet)7204_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltyInfosSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(RoyaltyInfosSet)7204_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltyInfosSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)3232_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Part)3232_storage)dyn_storage": {
            "label": "struct PartLibrary.Part[]"
          },
          "t_struct(Part)3232_storage": {
            "label": "struct PartLibrary.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
